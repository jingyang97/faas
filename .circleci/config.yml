version: 2
jobs:
  build:
    # directory where steps are run
    working_directory: ~/faas
    docker:
      - image: circleci/python:3.7.4
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run:
          name: install awscli
          command: |-
            sudo apt-get update
            sudo apt-get install -y python3-pip
            sudo pip install awscli
            echo "awscli installed"
      - run:
          name: build deployment artifacts
          command: |-
            mkdir codedeploy_artifact
            zip -r lambda-${CIRCLE_BUILD_NUM}.zip password_reset
            pwd
            ls -al
            mv lambda-${CIRCLE_BUILD_NUM}.zip codedeploy_artifact/
            mv appspec.yml codedeploy_artifact/
            ls -al
            pwd
            cd codedeploy_artifact
            pwd
            ls -al
            cd ..
            pwd
            ls -al
      - run:
          name: copy artifacts to S3
          command: |-
            aws s3 sync ./codedeploy_artifact s3://${S3_CODEDEPLOY_BUCKET}
      - run:
          name: update lambda function code
          command: |-
            aws configure \
                Default region name [None]: us-west-2
            aws lambda update-function-code \
                --function-name  password_reset \
                --s3-bucket ${S3_CODEDEPLOY_BUCKET} \
                --s3-key lambda-${CIRCLE_BUILD_NUM}.zip \
                --publish

      - run:
          name: CodeDeploy API call
          command: |-

            aws deploy create-deployment \
                --application-name ${CODEDEPLOY_APPLICATION_NAME} \
                --deployment-config-name CodeDeployDefault.LambdaAllAtOnce \
                --deployment-group-name ${CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME} \
                --description "CSYE6225 - CodeDeploy" \
                --s3-location bucket=${S3_CODEDEPLOY_BUCKET},key=appspec.yml,bundleType=YAML \
                --region us-east-1 \
                --output json

workflows:
  version: 2
  build_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
